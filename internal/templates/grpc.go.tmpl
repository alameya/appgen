package {{toLower .Name}}

import (
    "context"
    "fmt"
    "net"

    "google.golang.org/grpc"
    "app/internal/proto"
    "app/internal/repository"
    "app/internal/models"
)

type Server struct {
    proto.Unimplemented{{.Name}}ServiceServer
    repo *repository.Repository
}

func NewServer(repo *repository.Repository) *Server {
    return &Server{repo: repo}
}

func (s *Server) Create(ctx context.Context, req *proto.Create{{.Name}}Request) (*proto.{{.Name}}, error) {
    // TODO: Implement
    return nil, nil
}

func (s *Server) Get(ctx context.Context, req *proto.Get{{.Name}}Request) (*proto.{{.Name}}, error) {
    // TODO: Implement
    return nil, nil
}

func (s *Server) List(ctx context.Context, req *proto.List{{.Name}}Request) (*proto.List{{.Name}}Response, error) {
    // TODO: Implement
    return nil, nil
}

func convert{{.Name}}ToProto(item *models.{{.Name}}) *proto.{{.Name}} {
    return &proto.{{.Name}}{
        {{range .Fields}}
        {{toCamel .Name}}: item.{{toCamel .Name}},
        {{end}}
    }
} 